# -*- coding: utf-8 -*-
"""TRABALHOPOOEU.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yk5ijkh98QFZGx0TaWDkCE72rNb0qhOp
"""

import datetime
import requests
import random

class Tarefa:
    def __init__(self, descricao, data_hora):
        self.descricao = descricao
        self.data_hora = data_hora

    def executar(self):
        pass

class Lembrete(Tarefa):
    def executar(self):
        print(f"Lembrete: {self.descricao} - {self.data_hora}")

class InformacaoMeteorologica(Tarefa):
    def executar(self):
        # PODE BOTAR UMA API QUE DISPONIBILIZA O CLIMA E TEMPERATURA // ASSIM COMO A HORA TAMBÉM
        temperatura = 25
        condicao = "Ensolarado"
        print(f"Informação Meteorológica: {condicao}, {temperatura}°C - {self.data_hora}")

class Piada(Tarefa):
    def executar(self):
        piadas = [
            "Por que o programador nunca mente? Porque sempre diz 'Hello World!'",
            "Qual é o doce favorito do desenvolvedor? Byte de morango.",
            "O que o algoritmo tímido faz? Só ordena quando é pedido."
        ]

        # Acesse aleatoriamente a lista de piadas
        piada_escolhida = random.choice(piadas)
        print(f"Piada: {piada_escolhida}")

class AssistenteVirtual:
    def __init__(self):
        self.tarefas = []

    def adicionar_tarefa(self, tarefa):
        self.tarefas.append(tarefa)

    def executar_tarefas(self):
        for tarefa in self.tarefas:
            tarefa.executar()

# Exemplo de uso
if __name__ == "__main__":
    assistente = AssistenteVirtual()

    lembrete = Lembrete("Reunião importante", datetime.datetime(2023, 12, 1, 10, 0))
    info_meteorologica = InformacaoMeteorologica("Previsão do tempo", datetime.datetime(2023, 12, 1, 8, 0))
    piada = Piada("Contar uma piada", datetime.datetime.now())

    assistente.adicionar_tarefa(lembrete)
    assistente.adicionar_tarefa(info_meteorologica)
    assistente.adicionar_tarefa(piada)

    assistente.executar_tarefas()